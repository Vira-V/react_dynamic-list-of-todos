{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/useUser.ts","components/TodoModal/TodoModal.tsx","useTodos.ts","App.tsx","index.tsx"],"names":["TodoList","todos","handleSelectTodo","selectedTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","titleFilter","statusFilter","handleTitleFilterChange","handleStatusFilterChange","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useUser","userId","useState","user","setUser","isLoading","setIsLoading","useEffect","getUser","data","TodoModal","handleClose","href","email","name","useTodos","setTodos","App","setSelectedTodo","setTitleFilter","setStatusFilter","displayTodos","useMemo","filter","toLowerCase","includes","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fb1c7c2.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  handleSelectTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  handleSelectTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={cn('far', {\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","export type StatusFilter = 'all' | 'completed' | 'active';\n\ntype TodoFilterProps = {\n  titleFilter: string;\n  handleTitleFilterChange: (text: string) => void;\n  statusFilter: StatusFilter;\n  handleStatusFilterChange: (status: StatusFilter) => void;\n};\n\nexport const TodoFilter : React.FC<TodoFilterProps> = ({\n  titleFilter,\n  statusFilter,\n  handleTitleFilterChange,\n  handleStatusFilterChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={statusFilter}\n          onChange={(e) => handleStatusFilterChange(\n            e.target.value as StatusFilter,\n          )}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={titleFilter}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(e) => handleTitleFilterChange(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {\n        titleFilter\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleTitleFilterChange('')}\n            />\n          </span>\n        )\n      }\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\r\nimport { User } from './types/User';\r\n\r\n// eslint-disable-next-line max-len\r\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\r\n\r\n// This function creates a promise\r\n// that is resolved after a given delay\r\nfunction wait(delay: number): Promise<void> {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction get<T>(url: string): Promise<T> {\r\n  // eslint-disable-next-line prefer-template\r\n  const fullURL = BASE_URL + url + '.json';\r\n\r\n  // we add some delay to see how the loader works\r\n  return wait(300)\r\n    .then(() => fetch(fullURL))\r\n    .then(res => res.json());\r\n}\r\n\r\nexport const getTodos = () => get<Todo[]>('/todos');\r\n\r\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\r\n","import { useEffect, useState } from 'react';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const useUser = (userId: number) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(userId).then(data => {\n      setUser(data);\n      setIsLoading(false);\n    });\n  }, [userId]);\n\n  return { user, isLoading };\n};\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { useUser } from './useUser';\nimport { Todo } from '../../types/Todo';\n\ntype TodoModalProps = {\n  selectedTodo: Todo;\n  handleClose: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  selectedTodo,\n  handleClose,\n}) => {\n  const { user, isLoading } = useUser(selectedTodo.userId);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed\n                && <strong className=\"has-text-success\">Done</strong>\n              }\n              {\n                !selectedTodo.completed\n                && <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const useTodos = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos().then((data) => {\n      setTodos(data);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return { todos, isLoading };\n};\n","/* eslint-disable max-len */\nimport React, { useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { StatusFilter, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useTodos } from './useTodos';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const { todos, isLoading } = useTodos();\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [titleFilter, setTitleFilter] = useState('');\n  const [statusFilter, setStatusFilter] = useState<StatusFilter>('all');\n\n  const displayTodos = useMemo(() => todos.filter(todo => {\n    if (!todo.title.toLowerCase().includes(titleFilter.toLowerCase().trim())) {\n      return false;\n    }\n\n    if (statusFilter === 'active' && todo.completed) {\n      return false;\n    }\n\n    if (statusFilter === 'completed' && !todo.completed) {\n      return false;\n    }\n\n    return true;\n  }), [titleFilter, statusFilter, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                titleFilter={titleFilter}\n                handleTitleFilterChange={setTitleFilter}\n                statusFilter={statusFilter}\n                handleStatusFilterChange={setStatusFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && (\n                <TodoList\n                  todos={displayTodos}\n                  handleSelectTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        selectedTodo && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            handleClose={() => setSelectedTodo(null)}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}